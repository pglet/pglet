project_name: pglet

builds:
  # server
  - id: pglet-server
    main: cmd/pglet-server/main.go
    binary: pglet-server
    env:
      - CGO_ENABLED=0  
    flags:
      - -tags=release
    ldflags: >
      -X github.com/pglet/pglet/internal/commands.version={{.Version}}
    goos:
      - linux
    goarch:
      - amd64

  # CLI
  - id: pglet
    main: cmd/pglet/main.go
    binary: pglet
    env:
      - CGO_ENABLED=0  
    flags:
      - -tags=release
    ldflags: >
      -X github.com/pglet/pglet/internal/commands.version={{.Version}}
    goos:
      - linux
      - darwin
    goarch:
      - amd64
      - arm
      - arm64
    goarm:
      - 7

dockers:
  -
    ids:
    - pglet-server
    
    goos: linux
    goarch: amd64
    goarm: ''

    image_templates:
    - "pglet/server:latest"
    - "pglet/server:{{ .Version }}"
    - "us.gcr.io/pglet-app/pglet-server:{{ .Version }}"

    skip_push: true
    dockerfile: Dockerfile
    use: buildx

    # Template of the docker build flags.
    build_flag_templates:
    - "--pull"
    - "--label=org.opencontainers.image.created={{.Date}}"
    - "--label=org.opencontainers.image.title={{.ProjectName}}"
    - "--label=org.opencontainers.image.revision={{.FullCommit}}"
    - "--label=org.opencontainers.image.version={{.Version}}"
    #- "--build-arg=FOO={{.Env.Bar}}"
    - "--platform=linux/amd64"

archives:
  -
    id: pglet-server-tars    
    builds:
    - pglet-server
    name_template: "pglet-server-{{ .Version }}-{{ .Os }}-{{ .Arch }}"
  -
    id: pglet-tars    
    builds:
    - pglet
    name_template: "pglet-{{ .Version }}-{{ .Os }}-{{ .Arch }}"    

release:
  prerelease: auto