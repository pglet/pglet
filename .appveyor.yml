skip_branch_with_pr: true

environment:
  GO_VERSION: 1.17.2
  GO_TAGS: --tags release
  GITHUB_TOKEN:
    secure: uX7wMPjOz72c6zs4QS2/m3vsOE5Fh7e68YqMNSf0mRmb6hP9Ij8haCefQjxBDlEb
  DOCKER_REGISTRY_USER:
    secure: NJVK0u9M6ZhmQKUeR6Gnxg==
  DOCKER_REGISTRY_PASS:
    secure: V9nRzVDlIGS0a+dhkC2/vw==
  GCR_SA_JSON:
    secure: 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

  matrix:
    - job_name: Windows
      job_group: tests
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019

    - job_name: Linux
      job_group: tests
      APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu

    - job_name: macOS
      job_group: tests
      APPVEYOR_BUILD_WORKER_IMAGE: macOS

    - job_name: Release
      job_depends_on: tests
      APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu

matrix:
  fast_finish: true
  
for:
  
# ======================================
#      Windows
# ======================================

-
  matrix:
    only:
    - job_name: Windows

  install:
  - ps: .\install_go.ps1
  - set GOPATH=%USERPROFILE%\go
  - set PATH=%GOPATH%\bin;%PATH%
  - echo %GOPATH%
  - echo %GOROOT%
  - go version

  build_script:
  - ps: Install-Product node 12 x64
  - cd client
  - yarn
  - yarn build
  - cd ..
  - mkdir internal\server\content
  - xcopy client\build internal\server\content\ /E /Y
  - .\build.cmd
  - dir %USERPROFILE%\Go\bin

  test_script:
  - run-tests.cmd

# ======================================
#      Linux
# ======================================

-
  matrix:
    only:
    - job_name: Linux

  install:
  - gvm install go${GO_VERSION} -B
  - gvm use go${GO_VERSION}
  - go version

  build_script:
  - nvm use 12
  - cd client
  - yarn
  - yarn build
  - cd ..
  - mkdir internal/server/content
  - cp -r client/build/* internal/server/content
  - ./build.sh
  - ls $GOPATH/bin

  test_script:
  - ./run-tests.sh

# ======================================
#      macOS
# ======================================

-
  matrix:
    only:
    - job_name: macOS

  install:
  - gvm install go${GO_VERSION} -B
  - gvm use go${GO_VERSION}
  - go version
  - HOMEBREW_NO_AUTO_UPDATE=1 brew install yarn

  build_script:
  - nvm use 14
  - cd client
  - yarn
  - yarn build
  - cd ..
  - mkdir internal/server/content
  - cp -r client/build/* internal/server/content
  - ./build.sh
  - ls $GOPATH/bin

  test_script:
  - ./run-tests.sh

# ======================================
#      Release
# ======================================

-
  matrix:
    only:
    - job_name: Release

  install:
  - gvm install go${GO_VERSION} -B
  - gvm use go${GO_VERSION}
  - go version
  - bash ./install_goreleaser.sh
  - goreleaser --version
  # - sh: |
  #    sudo snap install --classic goreleaser
  #    goreleaser --version

  build_script:
  - nvm use 12
  - cd client
  - yarn
  - GENERATE_SOURCEMAP=false yarn build
  - ls -alR build
  - cd ..
  - mkdir internal/server/content
  - cp -r client/build/* internal/server/content
  - sh: |
      if [[ "$APPVEYOR_REPO_TAG" == "true" ]]; then
        goreleaser
      else
        goreleaser --snapshot --skip-publish
      fi

  test_script:
  - docker images
  - docker run --name pglet-test -d pglet/server
  - sleep 10
  - docker logs pglet-test

  # publish to docker.io on tagged builds only
  - sh: |
      if [[ "$APPVEYOR_REPO_TAG" == "true" ]]; then
        echo "$DOCKER_REGISTRY_PASS" | docker login --username $DOCKER_REGISTRY_USER --password-stdin
        docker image push --all-tags pglet/server
      fi

  # publish to gcr.io on every build, but not PR
  deploy_script:
  - sh: echo "$GCR_SA_JSON" > /tmp/gcp.json
  - sh: gcloud auth activate-service-account --key-file=/tmp/gcp.json
  - sh: gcloud auth configure-docker -q
  - sh: docker image push --all-tags us.gcr.io/pglet-app/pglet-server

  artifacts:
  - path: dist/pglet-*