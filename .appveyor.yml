skip_branch_with_pr: true

environment:
  GO_VERSION: 1.16rc1
  GO_TAGS: --tags release
  GITHUB_TOKEN:
    secure: eiUu4bDjW+iunm/q1LsDOIBF3EOAZBRynjMztjPDwFOTDivVlYlSPvfjlQY3+Qd9

  matrix:
    # - job_name: Windows
    #   job_group: tests
    #   APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019

    # - job_name: Linux
    #   job_group: tests
    #   APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu

    # - job_name: macOS
    #   job_group: tests
    #   APPVEYOR_BUILD_WORKER_IMAGE: macOS

    - job_name: Release
      #job_depends_on: tests
      APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu

matrix:
  fast_finish: true
  
for:
  
# ======================================
#      Windows
# ======================================

-
  matrix:
    only:
    - job_name: Windows

  install:
  - ps: .\install_go.ps1
  - set GOPATH=%USERPROFILE%\go
  - set PATH=%GOPATH%\bin;%PATH%
  - echo %GOPATH%
  - echo %GOROOT%

  build_script:
  - ps: Install-Product node 12 x64
  - cd client
  - yarn
  - yarn build
  - cd ..
  - go get -u github.com/jteeuwen/go-bindata/...
  - go-bindata -o internal/server/bindata.go --pkg server client/build/...
  - .\build.cmd
  - dir %USERPROFILE%\Go\bin

  test_script:
  - run-tests.cmd

# ======================================
#      Linux
# ======================================

-
  matrix:
    only:
    - job_name: Linux

  install:
  - ./install_go.sh

  build_script:
  - nvm use 12
  - cd client
  - yarn
  - yarn build
  - cd ..
  - go get -u github.com/jteeuwen/go-bindata/...
  - go-bindata -o internal/server/bindata.go --pkg server client/build/...
  - ./build.sh
  - ls $GOPATH/bin

  test_script:
  - ./run-tests.sh

# ======================================
#      macOS
# ======================================

-
  matrix:
    only:
    - job_name: macOS

  install:
  - ./install_go.sh
  - HOMEBREW_NO_AUTO_UPDATE=1 brew install yarn

  build_script:
  - nvm use 14
  - cd client
  - yarn
  - yarn build
  - cd ..
  - go get -u github.com/jteeuwen/go-bindata/...
  - go-bindata -o internal/server/bindata.go --pkg server client/build/...
  - ./build.sh
  - ls $GOPATH/bin

  test_script:
  - ./run-tests.sh

# ======================================
#      Release
# ======================================

-
  matrix:
    only:
    - job_name: Release

  install:
  #- ./install_go.sh
  - gvm install go${GO_VERSION} -B
  - gvm use go${GO_VERSION}
  - go version  
  - sh: |
      sudo snap install --classic goreleaser
      goreleaser --version
  - 'echo GOPATH: $GOPATH'
  - ls -al $GOPATH
  - 'echo GOROOT: $GOROOT'
  - ls -al $GOROOT
  - which go

  build_script:
  - nvm use 12
  - cd client
  - yarn
  - GENERATE_SOURCEMAP=false yarn build
  - ls -alR build
  - cd ..
#  - go get -u github.com/jteeuwen/go-bindata/...
#  - go-bindata -o internal/server/bindata.go --pkg server client/build/...
#  - mkdir internal/server/content
  - cp -r client/build/* internal/server/content
  - ls -alR internal/server/content
  - sh: |
      if [[ "$APPVEYOR_REPO_TAG" == "true" ]]; then
        goreleaser
      else
        goreleaser --snapshot --skip-publish
      fi

  artifacts:
  - path: dist/pglet-*

  test: off